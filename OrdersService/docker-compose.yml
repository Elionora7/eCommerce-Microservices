

services:
  ordersmicroserviceapi:
    image: ordersmicroserviceapi
    build:
      context: .
      dockerfile: OrdersMicroserviceAPI/Dockerfile

    environment:
    - MONGODB_HOST=mongodb-container
    - MONGODB_PORT=27017
    - MONGODB_DATABASE=OrdersDatabase
    - UserMicroServiceName=apigateway
    - UserMicroServicePort=8080
    - ProductMicroServiceName=apigateway
    - ProductMicroServicePort=8080
    - REDIS_HOST=redis
    - REDIS_PORT=6379
    - RabbitMQ_HostName=rabbitmq
    - RabbitMQ_UserName=user
    - RabbitMQ_Password=P@ssw0rd
    - RabbitMQ_Port=5672
    - RabbitMQ_Products_Exchange=products.exchange
    ports:
    - "7000:8080"
    networks:
     - orders-mongodb-network
     - ecommerce-network
    depends_on:
     - mongodb-container


  mongodb-container:
   image: mongo:latest
   ports:
    - "27017:27017"
   volumes:
    - ../mongodb/mongodb-init:/docker-entrypoint-initdb.d
   networks:
    - orders-mongodb-network
     

  products-microservice:
   image: products-microservice:latest
   environment:
    - ASPNETCORE_HTTP_PORTS=8080
    - ASPNETCORE_ENVIRONMENT=Development
    - MYSQL_HOST=mysql-container
    - MYSQL_PORT=3306
    - MYSQL_DATABASE=ecommerceproductsdatabase
    - MYSQL_USER=root
    - MYSQL_PASSWORD=P@ssw0rd
    - RabbitMQ_HostName=rabbitmq
    - RabbitMQ_UserName=user
    - RabbitMQ_Password=P@ssw0rd
    - RabbitMQ_Port=5672
    - RabbitMQ_Products_Exchange=products.exchange
   ports:
    - "6002:8080"
   networks:
    - products-mysql-network
    - ecommerce-network
   depends_on:
    - mysql-container
  

  mysql-container:
   image: mysql:8.0
   environment:
    - MYSQL_ROOT_PASSWORD=P@ssw0rd
   ports:
    - "3306:3306"
   volumes:
    - ../mysql/mysql-init:/docker-entrypoint-initdb.d
   networks:
    - products-mysql-network


  users-microservice:
   image: users-microservice:latest
   environment:
    - ASPNETCORE_HTTP_PORTS=8080
    - ASPNETCORE_HTTP_ENVIRONMENT=Development
    - POSTGRES_HOST=postgres-container
    - POSTGRES_PORT=5432
    - POSTGRES_DATABASE=eCommerceUsers
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=P@ssw0rd
   ports:
    - "5000:9090"
   networks:
    - users-postgres-network
    - ecommerce-network
   depends_on:
    - postgres-container


  postgres-container:
   image: postgres:13
   environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=P@ssw0rd
    - POSTGRES_DB=eCommerceUsers
   ports:
    - "5433:5432"
   volumes:
    - ../postgres/postgres-init:/docker-entrypoint-initdb.d
   networks:
    - users-postgres-network

  redis:
   image: redis:latest
   ports:
    - "6379:6379"
   volumes:
    - c:/microservices/redis-cache:/data
   networks:
    - ecommerce-network

  apigateway:
   image: apigateway
   build:
    context: ./APIGateway
    dockerfile: Dockerfile
   ports:
    - "4500:8080"
   networks:
    - orders-mongodb-network
    - ecommerce-network

  rabbitmq:
   image: rabbitmq:4.1.1-management
   ports:
    - "5672:5672"
    - "15672:15672"
   environment:
    - RABBITMQ_DEFAULT_USER=user
    - RABBITMQ_DEFAULT_PASS=P@ssw0rd
   networks:
    - ecommerce-network
networks:
 orders-mongodb-network:
  driver: bridge
 products-mysql-network:
  driver: bridge
 users-postgres-network:
  driver: bridge
 ecommerce-network:
  driver: bridge